//
//  getIPhoneIP.m
//  Ceremonies
//
//  Created by 尹俊雄 on 15/7/1.
//  Copyright (c) 2015年 张启冲. All rights reserved.
//

#import "getIPhoneIP.h"
#import <ifaddrs.h>
#import <arpa/inet.h>
#include <arpa/inet.h>
#include <netdb.h>

#include <net/if.h>

#include <ifaddrs.h>
#import <dlfcn.h>
@implementation getIPhoneIP
//create by huangys
+(NSString *)getIPAddress {
    NSString *address = @"error";
    struct ifaddrs *interfaces = NULL;
    struct ifaddrs *temp_addr = NULL;
    int success = 0;
    // retrieve the current interfaces - returns 0 on success
    success = getifaddrs(&interfaces);
    if (success == 0) {
        // Loop through linked list of interfaces
        temp_addr = interfaces;
        while(temp_addr != NULL) {
            if(temp_addr->ifa_addr->sa_family == AF_INET) {
                // Check if interface is en0 which is the wifi connection on the iPhone
                if([[NSString stringWithUTF8String:temp_addr->ifa_name] isEqualToString:@"en0"]) {
                    // Get NSString from C String
                    address = [NSString stringWithUTF8String:inet_ntoa(((struct sockaddr_in *)temp_addr->ifa_addr)->sin_addr)];
                }
            }
            temp_addr = temp_addr->ifa_next;
        }
    }
    
    if ([address isEqualToString:@"error"]) {
        address = @"8.8.8.8";
//        NSString *hostName = @"";
//        char baseHostName[256]; // Thanks, Gunnar Larisch
//        int success = gethostname(baseHostName, 255);
//        if (success != 0) return nil;
//        baseHostName[255] = '/0';
//        
//#if TARGET_IPHONE_SIMULATOR
//        hostName =  [NSString stringWithFormat:@"%s", baseHostName];
//#else
//        hostName = [NSString stringWithFormat:@"%s.local", baseHostName];
//#endif
//        
//        struct hostent *host = gethostbyname([hostName UTF8String]);
//        if (!host) {herror("resolv"); return nil;}
//        struct in_addr **list = (struct in_addr **)host->h_addr_list;
//        address = [NSString stringWithCString:inet_ntoa(*list[0]) encoding:NSUTF8StringEncoding];
//        NSLog(@"address = %@",address);
    }
    // Free memory
    freeifaddrs(interfaces);
    return address;
}

//从host获取地址
- (NSString *) getIPAddressForHost: (NSString *) theHost
{
    struct hostent *host = gethostbyname([theHost UTF8String]);
    if (!host) { herror("resolv"); return NULL; }
    struct in_addr **list = (struct in_addr **)host->h_addr_list;
    NSString *addressString = [NSString stringWithCString:inet_ntoa(*list[0]) encoding:NSUTF8StringEncoding];
    return addressString;
}



//获取host的名称
- (NSString *) hostname
{
    char baseHostName[256]; // Thanks, Gunnar Larisch
    int success = gethostname(baseHostName, 255);
    if (success != 0) return nil;
    baseHostName[255] = '/0';
    
#if TARGET_IPHONE_SIMULATOR
    return [NSString stringWithFormat:@"%s", baseHostName];
#else
    return [NSString stringWithFormat:@"%s.local", baseHostName];
#endif
}

//这是本地host的IP地址
- (NSString *) localIPAddress
{
    struct hostent *host = gethostbyname([[self hostname] UTF8String]);
    if (!host) {herror("resolv"); return nil;}
    struct in_addr **list = (struct in_addr **)host->h_addr_list;
    return [NSString stringWithCString:inet_ntoa(*list[0]) encoding:NSUTF8StringEncoding];
}


@end

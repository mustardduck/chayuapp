//
//  HLActionSheet.m
//  PracticeDemo
//
//  Created by Harvey on 15/11/11.
//  Copyright © 2015年 Harvey. All rights reserved.
//

#import "CYActionSheet.h"
#import "CYActionSheetItem.h"

#define ITEMHEIGHT 85
#define SHATEBUTTONTAG  9999
@interface CYActionSheet ()

@property (nonatomic, strong) ClickBlock    clickBlock;
@property (nonatomic, strong) CancelBlock   cancelBlock;

@property (nonatomic, strong) UIView *backgroundMask;
@property (nonatomic, strong) UIView *contentView;

@property (nonatomic, retain) UIScrollView *scrollView;

@end

@implementation CYActionSheet

static CYActionSheet *sheet = nil;

- (instancetype)initWithTitles:(NSArray *)titles iconNames:(NSArray *)iconNames
{
    self = [self initWithFrame:[UIScreen mainScreen].bounds];
    
    if (self) {
        NSArray *btntitleArr = @[@"微信好友",@"朋友圈",@"新浪微博",@"QQ好友",@"QQ空间"];
        NSArray *shareicoArr = @[@"logo_wechat",@"logo_wechatmoments",@"logo_sinaweibo",@"logo_qq",@"logo_qzone"];
        self.backgroundColor = [UIColor clearColor];
        self.backgroundColor = [UIColor clearColor];
        self.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
        
        self.backgroundMask = [[UIView alloc] initWithFrame:self.bounds];
        self.backgroundMask.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;
        self.backgroundMask.backgroundColor = [UIColor blackColor];
        self.backgroundMask.alpha = 0;
        [self addSubview:self.backgroundMask];
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(dismiss)];
//        tap.delegate = self;
        [self.backgroundMask addGestureRecognizer:tap];
        
        self.contentView = [[UIView alloc] initWithFrame:CGRectMake(0, CGRectGetHeight(self.bounds), CGRectGetWidth(self.bounds), CGRectGetHeight(self.bounds))];
        self.contentView.backgroundColor = [UIColor clearColor];
        self.contentView.autoresizingMask = UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleLeftMargin | UIViewAutoresizingFlexibleRightMargin;
        [self addSubview:self.contentView];
        UITapGestureRecognizer *tap2 = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(dismiss)];
        [self.contentView addGestureRecognizer:tap2];
        
        CGFloat margin = 8;
        
        self.scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(margin, 10, CGRectGetWidth(self.contentView.bounds)-margin*2, 150)];
        _scrollView.layer.masksToBounds = YES;
        _scrollView.layer.cornerRadius = 5;
        [_scrollView setBackgroundColor:[UIColor clearColor]];
        [_scrollView setShowsHorizontalScrollIndicator:NO];
        [_scrollView setShowsVerticalScrollIndicator:NO];
        [_scrollView setScrollEnabled:YES];
        _scrollView.backgroundColor = [UIColor whiteColor];
        
        CGFloat itemX = 10;
        NSUInteger count = btntitleArr.count <= shareicoArr.count ? btntitleArr.count:shareicoArr.count;
        for (int i = 0; i < count ; i++) {
            NSInteger row = i%4;
            NSInteger sec = i/4;
            UIView *itemView = [[UIView alloc] initWithFrame:CGRectMake(_scrollView.width/4*row,ITEMHEIGHT*sec+18, _scrollView.width/4, ITEMHEIGHT)];
            [_scrollView addSubview:itemView];
            CYActionSheetItem *item = [[CYActionSheetItem alloc] initWithFrame:CGRectMake(0,0,53, ITEMHEIGHT)];
            item.btnIndex = i+ SHATEBUTTONTAG;
            [item setTitle:btntitleArr[i] image:[UIImage imageNamed:shareicoArr[i]]];
            [item addTarget:self action:@selector(clickAction:) forControlEvents:UIControlEventTouchUpInside];
            [itemView addSubview:item];
            item.x = (itemView.width -53)/2;
        }
        _scrollView.height = (count/4 +1)*ITEMHEIGHT +20;
        _scrollView.contentSize = CGSizeMake(itemX, CGRectGetHeight(_scrollView.bounds));
        
       

        CGFloat btnY = CGRectGetMaxY(_scrollView.frame) + 8;
        UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
        btn.backgroundColor = [UIColor whiteColor];
        btn.frame = CGRectMake(margin, btnY, CGRectGetWidth(self.contentView.frame) - margin * 2, 44);
        [btn setTitle:@"取消" forState:UIControlStateNormal];
        [btn setTitleColor:[UIColor colorWithRed:0.22 green:0.45 blue:1 alpha:1] forState:UIControlStateNormal];
        btn.layer.cornerRadius = 5;
        btn.layer.masksToBounds = YES;
        [btn addTarget:self action:@selector(dismiss) forControlEvents:UIControlEventTouchUpInside];
        [self.contentView addSubview:btn];
        
        CGFloat height = CGRectGetMaxY(btn.frame) + 10;
        
        CGRect frame = self.contentView.frame;
        frame.size.height = height;
        self.contentView.frame = frame;
        
        [self.contentView addSubview:_scrollView];
    }
    
    return self;
}

- (void)clickAction:(CYActionSheetItem *)item
{
    
    AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    appDelegate.at = kAuthorizeTypeOpenShare;
    
    [UMSocialData defaultData].extConfig.title = _shareMessage.title;
//  
    UMSocialUrlResource *urlResource = [[UMSocialUrlResource alloc] initWithSnsResourceType:UMSocialUrlResourceTypeDefault url:
                                        _shareMessage.link];
  

//
    NSString *shareType = @"";
    
    switch (item.btnIndex) {
        case SHATEBUTTONTAG://微信好友
        {
            
            shareType = UMShareToWechatSession;
            
            [UMSocialData defaultData].extConfig.wechatSessionData.url = _shareMessage.link;
            [UMSocialData defaultData].extConfig.wechatSessionData.shareText = _shareMessage.desc;
            [UMSocialData defaultData].extConfig.wechatSessionData.shareImage = _shareMessage.image;
//            [OpenShare shareToWeixinSession:_shareMessage Success:^(OSMessage *message) {
//                NSLog(@"微信分享到会话成功：\n%@",message);
//                
//            } Fail:^(OSMessage *message, NSError *error) {
//                NSLog(@"微信分享到会话失败：\n%@\n%@",error,message);
//            }];
            
            
            
            break;
        }
        case SHATEBUTTONTAG+1://微信朋友圈
        {
             shareType = UMShareToWechatTimeline;
            [UMSocialData defaultData].extConfig.wechatTimelineData.url = _shareMessage.link;
            [UMSocialData defaultData].extConfig.wechatTimelineData.shareText = _shareMessage.desc;
            [UMSocialData defaultData].extConfig.wechatTimelineData.shareImage = _shareMessage.image;

            break;
        }
        case SHATEBUTTONTAG+2://新浪微博
        {
            
            shareType = UMShareToSina;
            urlResource.url = _shareMessage.link;
//            [UMSocialData defaultData].extConfig.sinaData;
            [UMSocialData defaultData].extConfig.sinaData.shareText = [NSString stringWithFormat:@"%@%@",_shareMessage.desc,_shareMessage.link];
            [UMSocialData defaultData].extConfig.sinaData.shareImage = _shareMessage.image;

            break;
        }
        case SHATEBUTTONTAG+3://qq好友
        {
            
            shareType = UMShareToQQ;
            [UMSocialData defaultData].extConfig.qqData.url = _shareMessage.link;
            [UMSocialData defaultData].extConfig.qqData.shareText = _shareMessage.desc;
            [UMSocialData defaultData].extConfig.qqData.shareImage = _shareMessage.image;

            break;
        }
        case SHATEBUTTONTAG+4://qq空间
        {
            
            shareType = UMShareToQzone;
            
            [UMSocialData defaultData].extConfig.qzoneData.url = _shareMessage.link;
            [UMSocialData defaultData].extConfig.qzoneData.shareText = _shareMessage.desc;
            [UMSocialData defaultData].extConfig.qzoneData.shareImage = _shareMessage.image;

            break;
        }
            
        default:
            break;
    }

    
    
    [[UMSocialDataService defaultDataService]  postSNSWithTypes:@[shareType] content:nil image:nil location:nil urlResource:urlResource presentedController:nil completion:^(UMSocialResponseEntity *shareResponse){
        if (shareResponse.responseCode == UMSResponseCodeSuccess) {
            NSLog(@"分享成功！");
        }
    }];
    
    if (_clickBlock) {
        _clickBlock(item.btnIndex);
    }
    
    [self dismiss];
}

- (void)setContentViewFrameY:(CGFloat)y
{
    CGRect frame = self.contentView.frame;
    frame.origin.y = y;
    self.contentView.frame = frame;
}

- (void)dismiss
{
    [UIView animateWithDuration:0.2 delay:0 options:UIViewAnimationOptionCurveEaseIn animations:^{
        self.backgroundMask.alpha = 0;
        [self setContentViewFrameY:CGRectGetHeight(self.bounds)];
    } completion:^(BOOL finished) {
        sheet.hidden = YES;
        sheet = nil;
    }];
}

- (void)showActionSheetWithClickBlock:(ClickBlock)clickBlock cancelBlock:(CancelBlock)cancelBlock
{
    _clickBlock = clickBlock;
    _cancelBlock = cancelBlock;
    sheet = self;
    sheet.hidden = NO;
    [UIView animateWithDuration:0.2 delay:0 options:UIViewAnimationOptionCurveEaseOut animations:^{
        self.backgroundMask.alpha = 0.6;
        [self setContentViewFrameY:CGRectGetHeight(self.bounds) - CGRectGetHeight(self.contentView.frame)];
    } completion:^(BOOL finished) {
        
    }];
}

-(void)dealloc
{
    NSLog(@"%s",__func__);
}


@end


@implementation OSMessage
-(BOOL)isEmpty:(NSArray*)emptyValueForKeys AndNotEmpty:(NSArray*)notEmptyValueForKeys{
    @try {
        if (emptyValueForKeys) {
            for (NSString *key in emptyValueForKeys) {
                if ([self valueForKeyPath:key]) {
                    return NO;
                }
            }
        }
        if (notEmptyValueForKeys) {
            for (NSString *key in notEmptyValueForKeys) {
                if (![self valueForKey:key]) {
                    return NO;
                }
            }
        }
        return YES;
    }
    @catch (NSException *exception) {
        NSLog(@"isEmpty error:\n %@",exception);
        return NO;
    }
}

@end
